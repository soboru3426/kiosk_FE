<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.baskin_admin.pay.PayMapper">

    <!-- 조회: 전체 결제 내역 DTO -->
    <select id="findAllPays" resultType="com.example.baskin_admin.pay.PayDTO">
        SELECT 
            p.payment_id AS paymentId,
            p.payment_method AS paymentMethod,
            m.name AS menuName,
            p.total_price AS totalPrice,
            p.payment_date AS paymentDate,  
            b.branch_name AS branchName,
            p.serial_number AS serialNumber
        FROM 
            payment p
        JOIN 
            menu m ON p.menu_id = m.menu_id
        JOIN 
            branch b ON p.branch_id = b.branch_id
    </select>

    <!-- 조회: 지점 기준 결제 내역 DTO -->
    <select id="findByBranchId" parameterType="long" resultType="com.example.baskin_admin.pay.PayDTO">
        SELECT 
            p.payment_id AS paymentId,
            p.payment_method AS paymentMethod,
            m.name AS menuName,
            p.total_price AS totalPrice,
            p.payment_date AS paymentDate,
            b.branch_name AS branchName,
            p.serial_number AS serialNumber
        FROM 
            payment p
        JOIN 
            menu m ON p.menu_id = m.menu_id
        JOIN 
            branch b ON p.branch_id = b.branch_id
        WHERE 
            p.branch_id = #{branchId}
    </select>

    <select id="findByBranchIds" resultType="com.example.baskin_admin.pay.PayDTO">
        SELECT 
            p.payment_id AS paymentId,
            p.payment_method AS paymentMethod,
            m.name AS menuName,
            p.total_price AS totalPrice,
            p.payment_date AS paymentDate,
            b.branch_name AS branchName,
            p.serial_number AS serialNumber
        FROM 
            payment p
        JOIN 
            menu m ON p.menu_id = m.menu_id
        JOIN 
            branch b ON p.branch_id = b.branch_id
        WHERE 
            p.branch_id IN
        <foreach item="id" collection="branchIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <!-- 삽입 -->
    <insert id="insertPay" parameterType="com.example.baskin_admin.pay.Pay">
        INSERT INTO payment 
            (menu_id, branch_id, quantity, total_price, payment_date, serial_number, payment_method)
        VALUES 
            (#{menu.menuId}, #{branch.branchId}, #{quantity}, #{totalPrice}, #{paymentDate}, #{serialNumber}, #{paymentMethod})
    </insert>
    
    <select id="getFilteredPayments" resultType="com.example.baskin_admin.pay.PayDTO">
        SELECT
            p.payment_id AS paymentId,
            p.payment_method AS paymentMethod,
            m.name AS menuName,
            p.total_price AS totalPrice,
            p.payment_date AS paymentDate,
            b.branch_name AS branchName,
            p.serial_number AS serialNumber
        FROM
            payment p
        JOIN
            menu m ON p.menu_id = m.menu_id
        JOIN
            branch b ON p.branch_id = b.branch_id
        WHERE
            p.branch_id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
            AND p.payment_date BETWEEN #{from, jdbcType=TIMESTAMP} AND #{to, jdbcType=TIMESTAMP}
        ORDER BY
            p.payment_date DESC
    </select>


</mapper>
